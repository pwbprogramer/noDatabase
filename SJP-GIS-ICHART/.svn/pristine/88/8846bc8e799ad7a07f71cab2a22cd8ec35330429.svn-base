package com.berheley.ichart.domain;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
//import java.util.Optional;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import com.fasterxml.jackson.annotation.JsonIgnore;

@Entity
@Table(name="bi_gis_user")
public class User implements UserDetails {

	private static final long serialVersionUID = 3442972923877585204L;
    
	@Id
	@Column(name="id",length=100)
	private String id;
	
	@Column(name="username",length=200)
	private String username;
	
	@Column(name="password",length=200)
	private String password;
	
	@Column(name="telphone",length=50)
    private String telphone;
    
//	private String realname;
    public void setTelphone(String telphone) {
    	this.telphone = telphone;
    }
    
    public String getTelphone() {
    	return telphone;
    }

//	@JsonIgnore
//	public Optional<String> getEncodedPassword() {
//		return Optional.ofNullable(password).map(p -> new BCryptPasswordEncoder().encode(p));
//	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@JsonIgnore
	public Collection<? extends GrantedAuthority> getAuthorities() {
		Collection<GrantedAuthority> authorities = new ArrayList<>();
		List<String> roles = new ArrayList<String>();
		if (roles != null) {
			for (int i = 0; i < roles.size(); i++) {
				SimpleGrantedAuthority authority = new SimpleGrantedAuthority(roles.get(i));
				authorities.add(authority);
			}

		}
		return authorities;
	}

	@JsonIgnore
	public boolean isAccountNonExpired() {
		return true;
	}

	@JsonIgnore
	public boolean isAccountNonLocked() {
		return true;
	}

	@JsonIgnore
	public boolean isCredentialsNonExpired() {
		return true;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

//	public String getRealname() {
//		return realname;
//	}
//
//	public void setRealname(String realname) {
//		this.realname = realname;
//	}

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Override
	public boolean isEnabled() {
		// TODO Auto-generated method stub
		return true;
	}

}
